'''

2020-06-09 00:32:53,712 - INFO qa.py run 59 - * get_most_overlap_path: ['<吉林大学>', '<校歌>'] ...
2020-06-09 00:32:53,712 - INFO neo4j_graph.py search_by_2path 83 - match (ent:Entity)-[r1:Relation]-(target) where ent.id=5199304  and r1.name='<校歌>' return DISTINCT target.name
2020-06-09 00:32:53,892 - INFO qa.py run 72 - * cypher answer: ['<吉林大学校歌>']
'''

'''
没有执行到 qa.run内部，搞不懂


question  : q185:林清玄有哪些别名？
sparql    : select ?x where { <林清玄> <别名> ?x. }
standard answer   : "秦情、林漓、林大悲等"
****************************************************************************************************

question  : q186:北京大学的发展定位是什么
sparql    : select ?x where { <北京大学> <发展定位> ?x . }
standard answer   : <世界一流大学>
****************************************************************************************************
 
 question  : q187:中华人民共和国的国家领导人是谁？
 sparql    : select ?x where { <中华人民共和国> <国家领袖> ?x . }
 standard answer   : <习近平>   <中华人民共和国主席>    <中华人民共和国国务院总理>      <李克强_（中共中 央政治局常委，国务院总理）>     <张德江_（中央政治局常委）>     <中华人民共和国全国人民代表大会常务委员会委员长>

****************************************************************************************************
 question  : q188:墨冰仙是哪个门派的？
 sparql    : select ?x where { <墨冰仙> <门派> ?x. }
 standard answer   : <蜀山派_（游戏《仙剑奇侠传》中的武林门派）>



****************************************************************************************************
 question  : q189:在金庸小说《天龙八部》中，斗转星移的修习者是谁？
 sparql    : select ?x where { <斗转星移_（金庸小说武功心法）> <主要修习者> ?x. }
 standard answer   : "慕容博"   "慕容龙城"      "慕容复"



****************************************************************************************************
 question  : q190:《基督山伯爵》的作者是谁？
 sparql    : select ?x where { <基督山伯爵_（大仲马代表作之一）> <作者> ?x. }
 standard answer   : <亚历山大·仲马_（法国作家、大仲马）>



****************************************************************************************************
 question  : q191:奥运会多久举办一次？
 sparql    : select ?x where { <奥林匹克运动会> <举办时间> ?x. }
 standard answer   : "每四年一届"



****************************************************************************************************
 question  : q192:音乐剧歌剧魅影的主要演员？
 sparql    : select ?x where { <歌剧魅影_（安德鲁·劳埃德·韦伯创作的音乐剧）> <主演> ?x. }
 standard answer   : <莎拉·布莱曼>



****************************************************************************************************
 question  : q193:索尼公司的经营范围有哪些？
 sparql    : select ?x where { <索尼_（世界著名企业）> <经营范围> ?x. }
 standard answer   : <信息技术_（用于管理和处理信息所采用各种技术总称）>        <金融_（专业词语汉语词语 ）>     <电子_（基本粒子之一）> <娱乐_（汉语词语）>



****************************************************************************************************
 question  : q194:2014年世界杯的冠军是哪只队？
 sparql    : select ?x where { <2014年巴西世界杯> <冠军> ?x. }
 standard answer   : <德国国家男子足球队>



****************************************************************************************************
 question  : q195:泰铢的通胀率是多少？
 sparql    : select ?x where { <泰铢> <通胀率> ?x. }
 standard answer   : "5.1%"



****************************************************************************************************
 question  : q196:小龙虾的中文学名？
 sparql    : select ?x where { <小龙虾_（甲壳纲螯虾科水生动物）> <中文学名> ?x. }
 standard answer   : "克氏原螯虾"



****************************************************************************************************
 question  : q197:纽约的气候条件是怎样的？
 sparql    : select ?x where { <纽约_（美国第一大城市）> <气候条件> ?x. }
 standard answer   : <温带大陆性气候>



****************************************************************************************************
 question  : q198:海贼王动画里黑胡子的声优是谁？
 sparql    : select ?x where { <黑胡子_（动漫《海贼王》中人物）> <配音> ?x. }
 standard answer   : <大冢明夫>



****************************************************************************************************
 question  : q199:大连在哪个省份？
 sparql    : select ?x where { <大连_（辽宁省辖市）> <所属地区> ?x. }
 standard answer   : <辽宁>



****************************************************************************************************
 question  : q200:新加坡的主要学府有哪些？
 sparql    : select ?x where { <新加坡> <主要学府> ?x. }
 standard answer   : "新加坡国立大学"   "南洋理工大学"



****************************************************************************************************
 question  : q201:大禹建立了哪个朝代？
 sparql    : select ?x where { ?x <开国君主> <禹_（夏朝开国君主）>. }
 standard answer   : <夏_（中国第一个朝代）>



****************************************************************************************************
 question  : q202:菲尔·奈特创立了什么品牌？
 sparql    : select ?x where { ?x <创始人> <菲尔·奈特>. }
 standard answer   : <AIR_（耐克旗下系列产品）> <NIKE>



****************************************************************************************************
 question  : q203:戊戌变法开始的标志是什么？
 sparql    : select ?x where { <戊戌变法> <序幕> ?x. }
 standard answer   : "公车上书"



****************************************************************************************************
 question  : q204:肯德基的口号是什么？
 sparql    : select ?x where { <肯德基> <公司口号> ?x . }
 standard answer   : "生活如此多娇"



****************************************************************************************************
 question  : q205:你知道彩虹又叫做什么吗？
 sparql    : select ?x where { <彩虹_（雨后光学现象）> <又称> ?x. }
 standard answer   : <天虹>



****************************************************************************************************
 question  : q206:巴金的中文名是什么？
 sparql    : select ?x where { <巴金> <中文名> ?x. }
 standard answer   : "李尧棠"



****************************************************************************************************
 question  : q207:海贼王里布鲁克的梦想是什么？
 sparql    : select ?x where { <布鲁克_（日本动漫《海贼王》中主要人物）> <梦想> ?x. }
 standard answer   : "回到双子跟鲸鱼拉布重逢"



****************************************************************************************************
 question  : q208:你知道铁的熔点吗？
 sparql    : select ?x where { <铁_（最常见的金属元素）> <熔点> ?x. }
 standard answer   : "1535℃"



****************************************************************************************************
 question  : q209:书籍《假如给我三天光明》是什么体裁？
 sparql    : select ?x where { <假如给我三天光明> <文学体裁> ?x. }
 standard answer   : <散文_（文学体裁）>



****************************************************************************************************
 question  : q210:上海戏剧学院现任校长是谁？
 sparql    : select ?y where { <上海戏剧学院> <现任校长> ?y. }
 standard answer   : <韩生_（中国著名舞美设计家、上海戏剧学院院长）>
'''

'''

正确识别却查询失败

- * q_text: linux的创始人毕业于哪个学校？
2020-06-14 09:59:32,694 - INFO qa.py run 40 - * get_candidate_entities 63 ...
2020-06-14 09:59:32,700 - INFO qa.py run 42 - * get candidate_out_paths: 1279,candidate_in_paths: 1279 ...
2020-06-14 09:59:32,707 - INFO qa.py run 46 - * get_most_overlap out path：13.9167， ['<linux>', '<创始人>', '<毕业院校>'] ...
2020-06-14 09:59:32,714 - INFO qa.py run 48 - * get_most_overlap in path：13.9167， ['<linux>', '<创始人>', '<毕业院校>'] ...
2020-06-14 09:59:32,714 - INFO qa.py run 56 - * get_most_overlap_path: ['<linux>', '<创始人>', '<毕业院校>'] ...
2020-06-14 09:59:32,714 - INFO neo4j_graph.py search_by_3path 123 - match (target)-[r1:Relation]-()-[r2:Relation]-(ent:Entity) where ent.id=3068935  and r1.name='<创始人>' and r2.name='<毕业院校>' return DISTINCT target.name; *ent_name:<linux>
2020-06-14 09:59:32,731 - INFO neo4j_graph.py search_by_2path 112 - match (ent:Entity)-[r1:Relation]-(target) where ent.id=3068935  and r1.name='<创始人>' return DISTINCT target.name; *ent_name:<linux>
2020-06-14 09:59:32,736 - INFO qa.py run 64 - * cypher answer: ['<林纳斯·托瓦兹>']


------
- * q_text: 易水歌的作者的主要事迹是什么？
2020-06-14 10:07:50,878 - INFO qa.py run 40 - * get_candidate_entities 27 ...
2020-06-14 10:07:50,880 - INFO qa.py run 42 - * get candidate_out_paths: 414,candidate_in_paths: 414 ...
2020-06-14 10:07:50,883 - INFO qa.py run 46 - * get_most_overlap out path：12.9444， ['<易水歌>', '<作者>', '<主要事迹>'] ...
2020-06-14 10:07:50,885 - INFO qa.py run 48 - * get_most_overlap in path：12.9444， ['<易水歌>', '<作者>', '<主要事迹>'] ...
2020-06-14 10:07:50,885 - INFO qa.py run 56 - * get_most_overlap_path: ['<易水歌>', '<作者>', '<主要事迹>'] ...
2020-06-14 10:07:50,885 - INFO neo4j_graph.py search_by_3path 123 - match (target)-[r1:Relation]-()-[r2:Relation]-(ent:Entity) where ent.id=7957014  and r1.name='<作者>' and r2.name='<主要事迹>' return DISTINCT target.name; *ent_name:<易水歌>
2020-06-14 10:07:50,893 - INFO neo4j_graph.py search_by_2path 112 - match (ent:Entity)-[r1:Relation]-(target) where ent.id=7957014  and r1.name='<作者>' return DISTINCT target.name; *ent_name:<易水歌>
2020-06-14 10:07:50,896 - INFO qa.py run 64 - * cypher answer: ['<荆轲_（战国时期著名刺客）>']
'''
